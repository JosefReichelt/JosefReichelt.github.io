{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/ProjectCard/ProjectCard.css?a4e1","webpack:///./src/components/Info/Info.css?be92","webpack:///./src/components/Header/Header.css?4e67","webpack:///./src/components/SocialBar/SocialBar.css?a626","webpack:///./src/components/Projects/Projects.css?cc4c","webpack:///./src/components/Footer/Footer.css?6d4d","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./src/utils/ageCalc.ts","webpack:///./src/data/texts.ts","webpack:///./src/components/logo/logo.ts","webpack:///./src/components/Header/Header.ts","webpack:///./src/images/foto.jpg","webpack:///./src/data/socialLinks.ts","webpack:///./src/components/SocialBar/SocialBar.ts","webpack:///./src/components/Info/Info.ts","webpack:///./src/data/projects.ts","webpack:///./src/images/projects/kybernauts.png","webpack:///./src/images/projects/gdcs.png","webpack:///./src/images/projects/brickthecastle.jpg","webpack:///./src/images/projects/sheriffpac.jpg","webpack:///./src/components/Projects/Projects.ts","webpack:///./src/components/ProjectCard/ProjectCard.ts","webpack:///./src/components/Footer/Footer.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","directives","WeakMap","isDirective","has","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","super","getTemplateElement","svgElement","firstChild","before","reparentNodes","isPrimitive","isIterable","Array","isArray","iterator","AttributeCommitter","dirty","_createPart","text","v","setAttribute","_getValue","committer","directive","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","set","join","svg","date","diff","ageDate","info","Date","now","getTime","abs","getFullYear","brandLogo","emailLogo","githubLogo","artstationLogo","sketchfabLogo","linkLogo","linkedInLogo","header","title","socialLinks","href","alt","icon","socialBar","map","link","imageSection","foto","textSection","projects","id","desc","image","github","tech","project","card","cardTitle","cardBody","cardImage","cardText","cardLinks","cardTechBubble","cardLink","footer","app","body","assign","appendInto","render"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ProjectCard-card--37YE_\",\"cardTitle\":\"ProjectCard-cardTitle--1QAUc\",\"cardBody\":\"ProjectCard-cardBody--3yD7F\",\"cardImage\":\"ProjectCard-cardImage---ffnV\",\"cardText\":\"ProjectCard-cardText--2t0Vy\",\"cardTechBubble\":\"ProjectCard-cardTechBubble--1oIYY\",\"cardLink\":\"ProjectCard-cardLink--1uKkG\",\"cardLinks\":\"ProjectCard-cardLinks--35Rc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info-info--2unG4\",\"imageSection\":\"Info-imageSection--9febG\",\"textSection\":\"Info-textSection--1CeoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header-header--1qRCL\",\"title\":\"Header-title--3Wcfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialBar\":\"SocialBar-socialBar--3agcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"Projects-projects--4r6BP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer-footer--2dyxG\"};","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","export const calculateAge = (date: Date): number => {\r\n    const diff = Date.now() - date.getTime();\r\n    const ageDate = new Date(diff);\r\n    return Math.abs(ageDate.getFullYear() - 1970);\r\n};","import { calculateAge } from \"../utils/ageCalc\";\r\n\r\n\r\nexport const motto = \"web developer, designer, game maker\";\r\nexport const info = `Jmenuji se Josef Reichelt, je mi ${calculateAge(new Date(1992, 7, 27))}let a jsem nadšenec do vývoje her a software.`;\r\nexport const currentInterests = \"V současné chvíli se specializuji na vývoj front-end aplikací, které používají React, Typescript, Next.js, Styled-Components. Zabývám se ale i jinými technologiemi jako Vue, Svelte a lit-html.\";","import { svg, SVGTemplateResult } from \"lit-html\";\r\n\r\n\r\nexport const brandLogo: SVGTemplateResult = svg`\r\n    <svg width=\"64\" height=\"64\" viewBox=\"0 0 512 513\" version=\"1.1\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n        style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\">\r\n            <rect id=\"bg\" x=\"0\" y=\"0.873\" width=\"512\" height=\"512\" />\r\n            <path id=\"letter\" d=\"M297.827,324.071l0,9.71c-0.058,31.302 -11.096,63.492 -35.788,83.593c-20.143,16.398 -47.685,23.134 -73.444,18.026c-29.095,-5.769 -54.464,-26.711 -66.558,-54.8c-6.31,-14.657 -9.115,-30.707 -9.176,-46.744l52.618,-0.199c0.007,1.923 0.072,3.84 0.209,5.753c0.078,1.103 0.179,2.205 0.305,3.304c1.637,14.21 7.881,28.669 20.784,36.425c14.475,8.7 34.865,6.563 46.62,-7.023c8.838,-10.214 11.762,-24.593 11.812,-38.127l0,-0.257l0,-188.124l52.618,0l0,54.02c7.591,-7.129 15.941,-13.447 25,-18.716c20.147,-11.718 43.581,-17.734 66.821,-17.876c0.392,-0.001 0.783,-0.002 1.175,-0.001c2.678,0.012 5.357,0.093 8.034,0.24l0.282,0.016l-3.023,52.531c-21.622,-1.244 -43.199,5.383 -59.952,20.029c-20.843,18.224 -33.397,44.941 -37.258,71.971c-0.76,5.32 -1.079,16.249 -1.079,16.249l0,0Zm-10.977,-194.289l-30.664,0l-15.332,-26.556l15.332,-26.556l30.664,0l15.332,26.556l-15.332,26.556Z\"/>\r\n    </svg>\r\n`;\r\n\r\nexport const emailLogo: SVGTemplateResult = svg`\r\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\"\r\n        style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\">\r\n            <path d=\"M16.497,0.232c8.831,0 16,7.17 16,16c0,8.831 -7.169,16 -16,16c-8.83,0 -16,-7.169 -16,-16c0,-8.83 7.17,-16 16,-16Zm12.718,23.497l0,-14.993l-25.435,0l0,14.993l25.435,0Zm-12.718,-5.1l10.99,-8.549l0.384,0l0,12.305l-22.747,0l0,-12.305l0.383,0l10.99,8.549Zm0,-1.703l-8.801,-6.846l17.603,0l-8.802,6.846Z\"/>\r\n    </svg>\r\n`;\r\n\r\nexport const githubLogo: SVGTemplateResult = svg`\r\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\"\r\n        style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\">\r\n            <path d=\"M16.456,0.232c-8.835,0 -15.999,7.345 -15.999,16.406c0,7.248 4.584,13.396 10.942,15.566c0.801,0.15 1.093,-0.356 1.093,-0.791c0,-0.389 -0.014,-1.421 -0.022,-2.79c-4.45,0.991 -5.389,-2.2 -5.389,-2.2c-0.728,-1.895 -1.777,-2.399 -1.777,-2.399c-1.453,-1.018 0.11,-0.997 0.11,-0.997c1.606,0.115 2.45,1.69 2.45,1.69c1.428,2.507 3.746,1.783 4.657,1.363c0.145,-1.059 0.558,-1.783 1.016,-2.192c-3.553,-0.414 -7.288,-1.822 -7.288,-8.108c0,-1.791 0.623,-3.255 1.647,-4.402c-0.165,-0.415 -0.714,-2.083 0.156,-4.342c0,0 1.344,-0.441 4.4,1.682c1.276,-0.365 2.645,-0.546 4.006,-0.552c1.358,0.006 2.728,0.187 4.005,0.552c3.055,-2.123 4.396,-1.682 4.396,-1.682c0.873,2.259 0.324,3.927 0.159,4.342c1.025,1.147 1.645,2.611 1.645,4.402c0,6.302 -3.741,7.689 -7.306,8.094c0.575,0.507 1.087,1.508 1.087,3.039c0,2.192 -0.02,3.962 -0.02,4.5c0,0.439 0.288,0.949 1.1,0.789c6.353,-2.174 10.933,-8.318 10.933,-15.564c0,-9.061 -7.164,-16.406 -16.001,-16.406\" />\r\n    </svg>\r\n`;\r\n\r\nexport const artstationLogo: SVGTemplateResult = svg`\r\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" \r\n        style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\">\r\n            <path d=\"M16,0c8.831,0 16,7.169 16,16c0,8.831 -7.169,16 -16,16c-8.831,0 -16,-7.169 -16,-16c0,-8.831 7.169,-16 16,-16Zm4.898,25.149l-2.417,-4.191l-12.873,0l1.759,3.034c0.343,0.687 1.058,1.157 1.878,1.157l11.653,0Zm-3.524,-18.298c0.805,0.001 1.506,0.449 1.857,1.115l6.825,11.878c0.21,0.322 0.336,0.714 0.336,1.135c0,0.476 -0.084,0.715 -0.42,1.268l-1.661,2.88l-10.546,-18.276l3.609,0Zm-0.617,11.129l-4.716,-8.171l-4.716,8.171l9.432,0Z\"/>\r\n    </svg>\r\n`;\r\n\r\nexport const sketchfabLogo: SVGTemplateResult = svg`\r\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" \r\n        style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2\">\r\n            <path d=\"M24.464,21.787l-6.873,3.968l0,-8.258l6.873,-3.713l0,8.003Zm-8.168,-6.213l-8.161,-4.326l8.161,-4.712l8.163,4.712l-8.163,4.326Zm-1.229,10.179l-6.898,-3.981l0,-8.033l6.898,3.726l0,8.288Zm1.39,-25.521c-8.837,0 -16,7.164 -16,16c0,8.837 7.163,16 16,16c8.838,0 16,-7.163 16,-16c0.002,-8.836 -7.161,-16 -16,-16\" />\r\n    </svg>\r\n`;\r\n\r\nexport const linkLogo: SVGTemplateResult = svg`\r\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" \r\n    xmlns=\"http://www.w3.org/2000/svg\" \r\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n    xml:space=\"preserve\" \r\n    style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;\">\r\n        <path d=\"M30.812,10.744L25.079,16.478C23.495,18.061 20.928,18.061 19.345,16.478L21.521,14.301C22.421,14.539 23.417,14.316 24.123,13.611L27.945,9.788C29.001,8.733 29.001,7.021 27.945,5.966L26.034,4.054C24.979,2.998 23.267,2.998 22.212,4.054L18.389,7.877C17.683,8.583 17.461,9.579 17.699,10.479L15.522,12.655C13.939,11.072 13.939,8.505 15.522,6.922L21.256,1.187C22.839,-0.396 25.407,-0.396 26.99,1.187L30.812,5.01C32.396,6.594 32.396,9.161 30.812,10.744ZM10.744,21.256C10.216,20.728 10.216,19.872 10.744,19.345L19.345,10.744C19.873,10.216 20.728,10.216 21.256,10.744C21.784,11.272 21.784,12.128 21.256,12.655L12.655,21.256C12.127,21.784 11.272,21.784 10.744,21.256ZM7.877,18.389L4.054,22.212C2.999,23.267 2.999,24.979 4.054,26.034L5.966,27.946C7.021,29.001 8.733,29.001 9.788,27.946L13.611,24.123C14.317,23.417 14.539,22.421 14.301,21.521L16.478,19.345C18.061,20.928 18.061,23.495 16.478,25.078L10.744,30.813C9.161,32.396 6.593,32.396 5.01,30.813L1.188,26.99C-0.396,25.406 -0.396,22.839 1.188,21.256L6.921,15.522C8.505,13.939 11.072,13.939 12.655,15.522L10.479,17.699C9.579,17.461 8.583,17.684 7.877,18.389Z\" />\r\n</svg>\r\n`;\r\n\r\nexport const linkedInLogo: SVGTemplateResult = svg`\r\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" \r\nxmlns=\"http://www.w3.org/2000/svg\" \r\nxmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" \r\nstyle=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;\">\r\n    <path d=\"M16,0C7.163,0 0,7.164 0,16C0,24.836 7.163,32 16,32C24.837,32 32,24.836 32,16C32.001,7.164 24.838,0 16,0ZM11.306,23.997L8.071,23.997L8.071,13.158L11.306,13.158L11.306,23.997ZM24.154,23.997L20.929,23.997L20.929,17.974C20.929,16.295 20.349,15.455 19.189,15.455C18.629,15.455 18.169,15.677 17.807,16.122C17.445,16.566 17.264,17.131 17.264,17.815L17.264,23.997L14.029,23.997L14.029,13.158L17.264,13.158L17.264,14.873L17.305,14.873C18.076,13.553 19.199,12.893 20.673,12.893C22.994,12.893 24.154,14.382 24.154,17.36L24.154,23.997ZM9.709,11.443C9.163,11.443 8.716,11.275 8.368,10.94C8.02,10.605 7.846,10.194 7.846,9.707C7.846,9.206 8.02,8.797 8.368,8.479C8.716,8.162 9.163,8.003 9.709,8.003C10.262,8.003 10.711,8.162 11.055,8.479C11.4,8.797 11.572,9.206 11.572,9.707C11.572,10.215 11.4,10.631 11.055,10.956C10.711,11.281 10.262,11.443 9.709,11.443Z\" />\r\n</svg>\r\n\r\n`;","import { TemplateResult, html } from \"lit-html\";\r\nimport style from \"./Header.css\";\r\nimport { motto } from \"../../data/texts\";\r\nimport { brandLogo } from \"../logo/logo\";\r\n\r\nexport const Header: TemplateResult = html`\r\n    <header class=\"${style.header}\">\r\n        <div>\r\n            ${brandLogo}\r\n            <span class=\"${style.title}\">\r\n                <h1>Josef Reichelt</h1>\r\n                <h3>${motto}</h3>\r\n            </span>\r\n        </div>\r\n    </header>\r\n`;","export default __webpack_public_path__ + \"assets/images/foto.jpg\";","import { SVGTemplateResult } from \"lit-html\";\r\nimport { emailLogo, githubLogo, artstationLogo, sketchfabLogo, linkedInLogo } from \"../components/logo/logo\";\r\n\r\nexport const socialLinks: SocialLink[] = [\r\n    {\r\n        name: \"Mail\",\r\n        href: \"mailto:pepareichelt@gmail.com\",\r\n        alt: \"My email link\",\r\n        icon: emailLogo\r\n    },\r\n    {\r\n        name: \"Github\",\r\n        href: \"https://github.com/JosefReichelt\",\r\n        alt: \"My email link\",\r\n        icon: githubLogo\r\n    }, {\r\n        name: \"Artstation\",\r\n        href: \"https://www.artstation.com/josefreichelt\",\r\n        alt: \"My graphics work on artstation\",\r\n        icon: artstationLogo\r\n    }\r\n    , {\r\n        name: \"Sketchfab\",\r\n        href: \"https://sketchfab.com/JosefReichelt\",\r\n        alt: \"My 3D modeling work on sketchfab\",\r\n        icon: sketchfabLogo\r\n    }, {\r\n        name: \"LinkedIn\",\r\n        href: \"https://www.linkedin.com/in/josefreichelt/\",\r\n        alt: \"My LinkedIn profile\",\r\n        icon: linkedInLogo\r\n    }\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface SocialLink {\r\n    name: string;\r\n    href: string;\r\n    alt: string;\r\n    icon: SVGTemplateResult;\r\n}","import { TemplateResult, html } from \"lit-html\";\r\nimport style from \"./SocialBar.css\";\r\nimport { socialLinks } from \"../../data/socialLinks\";\r\n\r\nexport const SocialBar: TemplateResult = html`\r\n    <div class=\"${style.socialBar}\">\r\n        ${socialLinks.map(link => html`\r\n            <a href=\"${link.href}\" alt=${link.alt} target=\"_blank\">\r\n                ${link.icon}\r\n            </a>\r\n        `)}\r\n    </div>\r\n`;","import { TemplateResult, html } from \"lit-html\";\r\nimport style from \"./Info.css\";\r\nimport { info, currentInterests } from \"../../data/texts\";\r\nimport foto from \"../../images/foto.jpg\";\r\nimport { SocialBar } from \"../SocialBar/SocialBar\";\r\n\r\nexport const Info: TemplateResult = html`\r\n    <div class=\"${style.info}\">\r\n        <div class=${style.imageSection}>\r\n            <img src=${foto} />\r\n            ${SocialBar}\r\n        </div>\r\n        <div class=${style.textSection}>\r\n            <span>\r\n                ${info}\r\n            </span>\r\n            <span>\r\n                ${currentInterests}\r\n            </span>\r\n        </div>\r\n    </div>\r\n`;","import kyberImage from \"../images/projects/kybernauts.png\";\r\nimport gamedevImage from \"../images/projects/gdcs.png\";\r\nimport brickImage from \"../images/projects/brickthecastle.jpg\";\r\nimport pacImage from \"../images/projects/sheriffpac.jpg\";\r\nimport stamperImage from \"../images/projects/stamperman.jpg\";\r\n\r\n\r\nexport const projects: Project[] = [\r\n    {\r\n        id: 0,\r\n        name: \"Kybernauts\",\r\n        desc: \"Youtube kanál kde se nám podařilo nasbírat až 22 tisíc odběratelů, poté jsme se přesunuli k Indian Play.\",\r\n        image: kyberImage,\r\n        link: \"https://www.youtube.com/channel/UCI6Q19WD34-lg0-HWPvkFXg\",\r\n        github: \"\",\r\n        tech: []\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Gamedev Komunita\",\r\n        desc: \"Discord server určený pro české a slovenské vývojáře. V současnosti okolo 200 členů.\",\r\n        image: gamedevImage,\r\n        link: \"https://discord.gg/SEzzru6\",\r\n        github: \"\",\r\n        tech:[]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Brick the Castle\",\r\n        desc: \"Klon Arkanoidu  s trochou úprav vytvořený v Unity během 72 hodin pro GDL GameJam.\",\r\n        image: brickImage,\r\n        link: \"https://protomace.itch.io/brick-the-castle\",\r\n        github: \"https://github.com/JosefReichelt/GDLBrickBreakerJam\",\r\n        tech: [\"Unity\", \"C#\", \"Krita\"]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Sheriff Pac\",\r\n        desc: \"Klon klasického Pac-Mana ve westernovém duchu vytvořený v Unity během 72 hodin pro GDL GameJam.\",\r\n        image: pacImage,\r\n        link: \"https://protomace.itch.io/sheriff-pac\",\r\n        github: \"https://github.com/JosefReichelt/TreasurePac\",\r\n        tech: [\"Unity\", \"C#\", \"Krita\"]\r\n    }\r\n];\r\n\r\nexport interface Project {\r\n    id: number;\r\n    name: string;\r\n    desc: string;\r\n    image: string;\r\n    tech: string[];\r\n    link: string;\r\n    github: string;\r\n\r\n}","export default __webpack_public_path__ + \"assets/projects/kybernauts.png\";","export default __webpack_public_path__ + \"assets/projects/gdcs.png\";","export default __webpack_public_path__ + \"assets/projects/brickthecastle.jpg\";","export default __webpack_public_path__ + \"assets/projects/sheriffpac.jpg\";","import { TemplateResult, html } from \"lit-html\";\r\nimport style from \"./Projects.css\";\r\nimport { projects } from \"../../data/projects\";\r\nimport { ProjectsCard } from \"../ProjectCard/ProjectCard\";\r\n\r\n\r\nexport const Projects: TemplateResult = html`\r\n    <div class=\"${style.projects}\">\r\n        ${projects.map(project => ProjectsCard(project))}\r\n    </div>\r\n`;","import { TemplateResult, html } from \"lit-html\";\r\nimport style from \"./ProjectCard.css\";\r\nimport { Project } from \"../../data/projects\";\r\nimport { linkLogo, githubLogo } from \"../logo/logo\";\r\n\r\n\r\nexport const ProjectsCard = (project: Project): TemplateResult => html`\r\n    <div class=\"${style.card}\">\r\n        <div class=\"${style.cardTitle}\">\r\n            ${project.name}\r\n        </div>\r\n    \r\n        <div class=\"${style.cardBody}\">\r\n            <div class=${style.cardImage}>\r\n                <img src=${project.image} />\r\n            </div>\r\n            <div class=\"${style.cardText}\">\r\n                <span>\r\n                    ${project.desc}\r\n                </span>\r\n                <div class=${style.cardLinks}>\r\n                    ${project.tech.map(t => html`\r\n                        <span class=${style.cardTechBubble}> \r\n                            ${t}\r\n                        </span>\r\n                        `\r\n                    )}\r\n                    ${project.link && html`\r\n                        <a class=${style.cardLink} href=${project.link} alt=${project.name} target=\"_blank\">\r\n                            ${linkLogo}\r\n                        </a>\r\n                    `}\r\n                    ${project.github && html`\r\n                        <a class=${style.cardLink} href=${project.github} alt=${project.name} target=\"_blank\">\r\n                            ${githubLogo}\r\n                        </a>\r\n                    `}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n`;\r\n","import { TemplateResult, html } from \"lit-html\";\r\nimport style from \"./Footer.css\";\r\nimport { SocialBar } from \"../SocialBar/SocialBar\";\r\n\r\n\r\nexport const Footer: TemplateResult = html`\r\n    <footer class=\"${style.footer}\">\r\n        ${SocialBar}\r\n    </footer>\r\n`;","import \"./index.css\";\r\nimport { render, html } from \"lit-html\";\r\nimport { Header } from \"./components/Header/Header\";\r\nimport { Info } from \"./components/Info/Info\";\r\nimport { Projects } from \"./components/Projects/Projects\";\r\nimport { Footer } from \"./components/Footer/Footer\";\r\n\r\nconst app: HTMLElement = document.body;\r\n\r\nrender(html` ${Header} ${Info} ${Projects} ${Footer}`, app);\r\n"],"sourceRoot":""}